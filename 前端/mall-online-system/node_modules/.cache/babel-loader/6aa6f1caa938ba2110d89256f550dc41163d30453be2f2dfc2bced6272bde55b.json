{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      drawer: false,\n      direction: 'ttb',\n      //上传组件请求头信息：\n      headers: {\n        token: JSON.parse(sessionStorage.getItem('TOKEN'))\n      },\n      //新建用户表单验证规则\n      accountRules: {\n        accountName: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        accountId: [{\n          required: true,\n          message: '请输入电话号码',\n          trigger: 'blur'\n        }],\n        accountSex: [{\n          required: true,\n          message: '请输入性别',\n          trigger: 'blur'\n        }],\n        statu: [{\n          required: true,\n          message: '请输入状态',\n          trigger: 'blur'\n        }],\n        delTag: [{\n          required: true,\n          message: '请输入操作',\n          trigger: 'blur'\n        }]\n      },\n      //用户对话框表单\n      accountForm: {\n        accountId: '',\n        password: '',\n        //头像\n        accountSex: '',\n        //用户名\n        accountName: '',\n        //密码\n        accountImg: '',\n        statu: 1,\n        //状态\n        delTag: 1\n      },\n      tableData1: [],\n      //用户表格显示数组\n      deleteAllBtnStu1: true,\n      //是否禁用用户的批量删除\n      dialogFormVisible1: false,\n      //是否显示新建用户对话框\n      dialogRoleFormVisible1: false,\n      //是否显示分配角色对话框\n      //搜索工具栏对象\n      searchForm1: {\n        accountName: ''\n      },\n      //分页相关的参数\n      current1: 1,\n      //当前页码，默认是显示第一页\n      size1: 5,\n      //一页显示记录数\n      total1: 0,\n      //总共的记录数\n\n      selection: [],\n      //存储表格中所有复选框 选中用户对象\n\n      //新建角色的表单对象\n      deliveryForm: {\n        daId: 0,\n        //角色id，更新id是有值。保存id===0\n        contactName: '',\n        //角色名称\n        contactSex: null,\n        accountId: '',\n        accountName: '',\n        contactTel: '',\n        //角色的编码\n        address: '',\n        //角色的描述\n        statu: null //角色的状态 1正常 0禁用\n      },\n      //角色对话框表单验证规则\n      deliveryRules: {\n        contactName: [{\n          required: true,\n          message: '请输入联系人名称',\n          trigger: 'blur'\n        }],\n        contactTel: [{\n          required: true,\n          message: '请输入联系人电话',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入联系人地址',\n          trigger: 'blur'\n        }],\n        statu: [{\n          required: true,\n          message: '请输入联系人状态',\n          trigger: 'blur'\n        }],\n        contactSex: [{\n          required: true,\n          message: '请输入联系人性别',\n          trigger: 'blur'\n        }]\n      },\n      tableData: [],\n      //角色表格的数据\n      dialogFormVisible: false,\n      //新建角色对话框是否可见。\n      deleteAllBtnStu: true,\n      //批量删除按钮是否禁用\n      //工具栏搜索的表单对象\n      searchForm: {\n        contactName: '' //搜索框输入的文本内容 \n      },\n      //分页相关的参数\n      current: 1,\n      //当前页码，默认是显示第一页\n      size: 5,\n      //一页显示记录数\n      total: 0,\n      //总共的记录数\n\n      accountId: '',\n      selection: [] //记录使用表格复选框选中角色数据\n    };\n  },\n  created() {\n    this.loadAccountList();\n  },\n  methods: {\n    openDrawer(id) {\n      this.loadComuList(id);\n      this.drawer = true;\n      console.log(id);\n      this.accountId = id;\n    },\n    resetAccountForm(formName) {\n      this.accountForm = {\n        id: '',\n        accountId: '',\n        password: '',\n        //头像\n        accountSex: '',\n        //用户名\n        accountName: '',\n        //密码\n        accountImg: '',\n        statu: 1,\n        //状态\n        delTag: 1\n      };\n      this.$refs[formName].resetFields();\n    },\n    resetPassword(accountId, accountName) {\n      this.$confirm('重置用户【' + accountName + '】的密码，是否继续执行该操作', '重置账户密码提示', {\n        confirmButtonText: '执行',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //请求服务器端，重置密码\n        this.$axios.post('/account/repass/' + accountId).then(response => {\n          this.$message({\n            showClose: true,\n            message: response.data.resultdata,\n            type: 'success',\n            duration: 1000\n          });\n          this.loadAccountList();\n        }).catch(e => {\n          console.log(e);\n        });\n      }).catch(() => {});\n    },\n    //提交新建用户或 编辑用户的表单\n    submitAccountForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log(this.accountForm.accountId);\n          this.$axios.post('/account/' + (this.accountForm.delTag != 1 ? 'update' : 'save'), this.accountForm).then(response => {\n            this.$message({\n              showClose: true,\n              message: response.data.resultdata,\n              type: 'success',\n              duration: 1000\n            });\n            //添加用户成功，重新加载分页表格数据\n            this.loadAccountList();\n            //重置角色对话框中的表单\n            this.resetAccountForm(formName);\n            this.dialogFormVisible1 = false;\n          }).catch(e => {\n            console.log(e);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleSelection1Change(roleArr) {\n      this.selection = roleArr;\n      if (this.selection) {\n        //this.selection数组为true，表示选中角色数据行\n        //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\n        //this.selection.length !==0 选中  设置deleteAllBtnStu 设置false不禁用\n        this.deleteAllBtnStu1 = this.selection.length === 0;\n      }\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    editAccount(id) {\n      this.$axios.get('/account/info/' + id).then(response => {\n        let account = response.data.resultdata;\n        this.accountForm = account;\n        this.dialogFormVisible1 = true;\n      });\n    },\n    deleteAccount(id) {\n      var accountIds = []; //存储所有要删除的角色id \n      console.log(id + 111);\n      //单个删除 参数id是有值的。而批量删除是从selection数组取删除的角色id\n      id ? accountIds.push(id) : this.selection.forEach(r => {\n        accountIds.push(r.accountId);\n      });\n      this.$axios.post('/account/delete', accountIds).then(response => {\n        this.$message({\n          showClose: true,\n          message: response.data.resultdata,\n          type: 'success',\n          duration: 1000\n        });\n        //删除成功，重新加载角色的分页表格数据\n        this.loadAccountList();\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    handleAvatarSuccess(response, file) {\n      console.log('头像', response.resultdata);\n      //上传成功，从回调的response参数中 获得上传图片在OSS服务器上地址。\n      //这个response和axios中使用response对象是不一样的。这个response不需要.data。直接返回的就是 result数据。\n      this.accountForm.accountImg = response.resultdata;\n      this.$forceUpdate(); //强制刷新\n    },\n    handleSize1Change(val) {\n      console.log(`每页 ${val} 条`);\n      this.size1 = val;\n      this.loadAccountList(); //一页显示的记录数改变，重新加载分页和表格数据。\n    },\n    handleCurrent1Change(val) {\n      console.log(`当前页: ${val}`);\n      this.current1 = val;\n      this.loadAccountList(); //当前页面改变，重新加载页面的数据。\n    },\n    //加载 分页用户表格数据\n    loadAccountList() {\n      this.$axios.get('/account/list', {\n        params: {\n          accountName: this.searchForm1.accountName,\n          //参数，就是模糊查询条件\n          current: this.current1,\n          size: this.size1\n        }\n      }).then(response => {\n        this.tableData1 = response.data.resultdata.records; //分页的表格数据\n        this.current1 = response.data.resultdata.current;\n        this.size1 = response.data.resultdata.size;\n        this.total1 = response.data.resultdata.total;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    //改变表格 复选框的事件方法\n\n    //参数roleArr 就是复选框选中对应这一行角色对象的数组(可以选多行)。\n    handleSelectionChange(roleArr) {\n      this.selection = roleArr;\n      if (this.selection) {\n        //this.selection数组为true，表示选中角色数据行\n        //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\n        //this.selection.length !==0 选中  设置deleteAllBtnStu 设置false不禁用\n        this.deleteAllBtnStu = this.selection.length === 0;\n      }\n    },\n    //点击页面上 页码触发的事件方法，该方法中编写，根据点击的页码加载该页的数据。\n    //val 参数就是点击 页码\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.current = val;\n      this.loadComuList(this.accountId); //当前页面改变，重新加载页面的数据。\n    },\n    //选择一页显示记录数触发的事件方法，该方法中编写 重新加载分页和表格数据\n    //val就是选择 一页要显示的记录数。\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.size = val;\n      this.loadComuList(this.accountId); //一页显示的记录数改变，重新加载分页和表格数据。\n    },\n    //加载表格分页数据\n    loadComuList(id) {\n      this.$axios.get('/delivery/list/' + id, {\n        params: {\n          accountId: this.accountForm.accountId,\n          contactName: this.searchForm.contactName,\n          //参数，就是模糊查询条件\n          current: this.current,\n          size: this.size\n        }\n      }).then(response => {\n        console.log(this.accountId);\n        console.log(response.data.resultdata);\n        this.tableData = response.data.resultdata.records; //分页的表格数据\n        this.current = response.data.resultdata.current;\n        this.size = response.data.resultdata.size;\n        this.total = response.data.resultdata.total;\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","drawer","direction","headers","token","JSON","parse","sessionStorage","getItem","accountRules","accountName","required","message","trigger","accountId","accountSex","statu","delTag","accountForm","password","accountImg","tableData1","deleteAllBtnStu1","dialogFormVisible1","dialogRoleFormVisible1","searchForm1","current1","size1","total1","selection","deliveryForm","daId","contactName","contactSex","contactTel","address","deliveryRules","tableData","dialogFormVisible","deleteAllBtnStu","searchForm","current","size","total","created","loadAccountList","methods","openDrawer","id","loadComuList","console","log","resetAccountForm","formName","$refs","resetFields","resetPassword","$confirm","confirmButtonText","cancelButtonText","type","then","$axios","post","response","$message","showClose","resultdata","duration","catch","e","submitAccountForm","validate","valid","handleSelection1Change","roleArr","length","handleClose","done","_","editAccount","get","account","deleteAccount","accountIds","push","forEach","r","handleAvatarSuccess","file","$forceUpdate","handleSize1Change","val","handleCurrent1Change","params","records","handleSelectionChange","handleCurrentChange","handleSizeChange"],"sources":["src/views/app/Account.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 用户管理 工具栏 -->\r\n        <el-form ref=\"searchForm1\" :model=\"searchForm1\" :inline=\"true\">\r\n            <el-form-item>\r\n                <el-input placeholder=\"请输入要搜索的账户名称\" v-model=\"searchForm1.accountName\" clearable /> \r\n            </el-form-item>    \r\n            <el-form-item>\r\n                <el-button @click=\"loadAccountList()\">搜索</el-button>\r\n                <el-button type=\"primary\" @click=\"dialogFormVisible1=true\">新建</el-button> \r\n                <el-popconfirm title=\"确认要删除这些用户吗?\" @confirm=\"deleteAccount()\">\r\n                    <el-button type=\"danger\" slot=\"reference\" :disabled=\"deleteAllBtnStu1\">批量删除</el-button>\r\n                </el-popconfirm>\r\n            </el-form-item>\r\n        </el-form>\r\n    \r\n        <!-- 用户数据表格显示 -->\r\n        <el-table :data=\"tableData1\" border style=\"width:100%; margin-bottom:20px; text-align: center;\" \r\n            :cell-style=\"{padding:'4px'}\" @selection-change=\"handleSelection1Change\">\r\n            <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n            <el-table-column label=\"头像\" width=\"70\">\r\n                <template slot-scope=\"scope\">\r\n                    <!-- <img style=\"width:40px; height:40px; background-size: cover;\" :src=\"scope.row.avatar\"/> -->\r\n                    <el-avatar  :src=\"scope.row.accountImg\"></el-avatar>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"accountName\" label=\"用户名\" width=\"120\" />\r\n            <el-table-column label=\"性别\" width=\"100\">\r\n                <template slot-scope=\"scope\" >\r\n                        <el-tag v-if=\"scope.row.accountSex===0\" type=\"success\" size=\"mini\">女生</el-tag>\r\n                        <el-tag v-else-if=\"scope.row.accountSex===1\" type=\"warning\" size=\"mini\">男生</el-tag>\r\n                </template>\r\n             </el-table-column>\r\n            <el-table-column prop=\"accountId\" label=\"电话\" width=\"140\" />\r\n            <el-table-column label=\"创建时间\">\r\n                <template slot-scope=\"scope\">\r\n                    {{ scope.row.created | fmtDate }}\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"更新时间\">\r\n            <template slot-scope=\"scope\" v-if=\"scope.row.updated!=null\">\r\n                {{ scope.row.updated | fmtDate }}\r\n            </template>\r\n            <template v-else>\r\n                \r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"用户地址详情\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                <el-button @click=\"openDrawer(scope.row.accountId)\" type=\"primary\" style=\"margin-left: 6px; padding: 8px;\" icon=\"el-icon-position\" size=\"mini\" >查询地址</el-button>\r\n                <el-drawer\r\n                    title=\"用户详细地址\"\r\n                    :visible.sync=\"drawer\"\r\n                    size=\"40%\"\r\n                    :direction=\"direction\"\r\n                    ref=\"drawer\"\r\n                    :before-close=\"handleClose\"\r\n                    :modal-append-to-body='false'>\r\n                    <div>\r\n         <!-- 角色管理 工具栏 -->\r\n         <!-- <el-form ref=\"searchForm\" :model=\"searchForm\" :inline=\"true\">\r\n             <el-form-item>\r\n                 <el-input placeholder=\"请输入要搜索的联系人名称\" v-model=\"searchForm.contactName\" clearable /> \r\n             </el-form-item>    \r\n             <el-form-item>\r\n                 <el-button @click=\"loadComuList()\">搜索</el-button>\r\n             </el-form-item>\r\n         </el-form> -->\r\n \r\n         <!-- 角色表格 -->\r\n         <el-table :data=\"tableData\" border style=\"width:100%; margin-bottom:20px;\" \r\n         :cell-style=\"{padding:'4px'}\" @selection-change=\"handleSelectionChange\">\r\n             <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n             <el-table-column prop=\"contactName\" label=\"联系人姓名\" width=\"150\"></el-table-column>\r\n             <el-table-column label=\"性别\" width=\"100\">\r\n                <template slot-scope=\"scope\" >\r\n                        <el-tag v-if=\"scope.row.statu===0\" type=\"success\" size=\"mini\">女生</el-tag>\r\n                        <el-tag v-else-if=\"scope.row.statu===1\" type=\"warning\" size=\"mini\">男生</el-tag>\r\n                </template>\r\n             </el-table-column>\r\n             <el-table-column prop=\"contactTel\" label=\"电话\" width=\"150\"></el-table-column>\r\n             <el-table-column prop=\"address\" label=\"地址\" width=\"380\"></el-table-column>\r\n             <el-table-column prop=\"accountName\" label=\"所属用户\" width=\"120\">\r\n                <template slot-scope=\"scope\" >\r\n                <el-tag type=\"warning\" size=\"small\" style=\"margin-left:2px;\">\r\n                {{ scope.row.accountName }}\r\n                </el-tag>\r\n                </template>\r\n                </el-table-column>\r\n             <el-table-column label=\"创建时间\">\r\n            <template slot-scope=\"scope\">\r\n                {{ scope.row.created | fmtDate }}\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"更新时间\">\r\n            <template slot-scope=\"scope\" v-if=\"scope.row.updated!=null\">\r\n                {{ scope.row.updated | fmtDate }}\r\n            </template>\r\n            <template v-else>\r\n                \r\n            </template>\r\n        </el-table-column>\r\n             <el-table-column prop=\"statu\" label=\"角色状态\" width=\"120\">\r\n                 <template slot-scope=\"scope\">\r\n                     <el-tag v-if=\"scope.row.statu===1\" type=\"success\" size=\"mini\">正常</el-tag>\r\n                     <el-tag v-else-if=\"scope.row.statu===0\" type=\"danger\" size=\"mini\">禁用</el-tag>\r\n                 </template>    \r\n             </el-table-column>\r\n         </el-table>\r\n         <!-- 分页组件 -->\r\n         <el-pagination\r\n         @size-change=\"handleSizeChange\"\r\n         @current-change=\"handleCurrentChange\"\r\n         :current-page=\"current\"\r\n         :page-sizes=\"[5, 10, 15, 20]\"\r\n         :page-size=\"size\"\r\n         layout=\"total, sizes, prev, pager, next, jumper\"\r\n         :total=\"total\">\r\n         </el-pagination>\r\n                     </div>               \r\n                </el-drawer>\r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"statu\" label=\"用户状态\" width=\"90\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag v-if=\"scope.row.statu===1\" type=\"success\" size=\"mini\">正常</el-tag>\r\n                    <el-tag v-else-if=\"scope.row.statu===0\" type=\"danger\" size=\"mini\">禁用</el-tag>\r\n                </template>    \r\n            </el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button type=\"text\" size=\"small\" @click=\"editAccount(scope.row.accountId)\">编辑</el-button>\r\n                        <el-divider direction=\"vertical\" />\r\n                    <el-button type=\"text\" size=\"small\"  @click=\"resetPassword(scope.row.accountId,scope.row.accountName)\">重置密码</el-button>\r\n                    <el-divider direction=\"vertical\" />    \r\n                    <el-popconfirm title=\"确定要删除该用户数据吗？\" @confirm=\"deleteAccount(scope.row.accountId)\">\r\n                            <el-button slot=\"reference\" type=\"text\" size=\"small\">删除</el-button>\r\n                        </el-popconfirm>\r\n                    </template>\r\n                </el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n            @size-change=\"handleSize1Change\"\r\n            @current-change=\"handleCurrent1Change\"\r\n            style=\"margin-top: 10px;\"\r\n            :current-page=\"current1\"\r\n            :page-sizes=\"[5, 10, 15, 20]\"\r\n            :page-size=\"size1\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total1\">\r\n        </el-pagination>\r\n    \r\n        <!-- 新建和编辑用户的对话框 -->\r\n        <el-dialog title=\"编辑用户\" :visible.sync=\"dialogFormVisible1\" width=\"550px\" @closed=\"resetAccountForm('accountForm')\">\r\n            <el-form ref=\"accountForm\" :model=\"accountForm\" label-width=\"100px\" :rules=\"accountRules\">\r\n                <el-form-item lang=\"用户头像\" label-width=\"100px\">\r\n                    <!-- 因为上传图片不是使用 axios，所以不会自动添加基础路径 /sys，需要自己添加 -->\r\n                    <!-- 因为上传组件不是使用axios,所以需要手动设置请求头携带token :headers=\"headers\" -->\r\n                    <el-upload class=\"avatar-uploader\" action=\"/sys/api/upload\" \r\n                    :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\" :headers=\"headers\">\r\n                    <img v-if=\"accountForm.accountImg\" :src=\"accountForm.accountImg\" class=\"avatar\">\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                    </el-upload>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"accountName\">\r\n                    <el-input v-model=\"accountForm.accountName\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" label-width=\"100px\">\r\n                    <el-input v-model=\"accountForm.password\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"性别\" label-width=\"100px\" prop=\"accountSex\">\r\n                    <el-radio-group v-model=\"accountForm.accountSex\">\r\n                        <el-radio :label=\"0\">女</el-radio>\r\n                        <el-radio :label=\"1\">男</el-radio>\r\n                    </el-radio-group>\r\n                </el-form-item>\r\n                <el-form-item label=\"电话\" label-width=\"100px\" prop=\"accountId\">\r\n                    <el-input v-model=\"accountForm.accountId\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"用户状态\" label-width=\"100px\" prop=\"statu\">\r\n                    <el-radio-group v-model=\"accountForm.statu\">\r\n                        <el-radio :label=\"0\">禁用</el-radio>\r\n                        <el-radio :label=\"1\">正常</el-radio>\r\n                    </el-radio-group>\r\n                </el-form-item>\r\n                <el-form-item label=\"操作\" label-width=\"100px\" prop=\"delTag\">\r\n                    <el-radio-group v-model=\"accountForm.delTag\">\r\n                        <el-radio :label=\"0\">更新</el-radio>\r\n                        <el-radio :label=\"1\">创建</el-radio>\r\n                    </el-radio-group>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitAccountForm('accountForm')\">保存用户</el-button>\r\n                    <el-button @click=\"resetAccountForm('accountForm')\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n    </div>\r\n    </template>\r\n     <script>\r\n     export default{\r\n         data(){\r\n             return{\r\n                drawer: false,\r\n                direction: 'ttb',\r\n                //上传组件请求头信息：\r\n                headers:{\r\n                    token:JSON.parse(sessionStorage.getItem('TOKEN')) \r\n                },\r\n                //新建用户表单验证规则\r\n                accountRules:{\r\n                    accountName:[ { required: true, message: '请输入用户名', trigger: 'blur' } ],\r\n                    accountId:[ { required: true, message: '请输入电话号码', trigger: 'blur' } ],\r\n                    accountSex:[ { required: true, message: '请输入性别', trigger: 'blur' } ],\r\n                    statu:[ { required: true, message: '请输入状态', trigger: 'blur' } ],\r\n                    delTag:[ { required: true, message: '请输入操作', trigger: 'blur' } ],\r\n                },\r\n    \r\n                //用户对话框表单\r\n                accountForm:{\r\n                    accountId:'',\r\n                    password:'',   //头像\r\n                    accountSex:'', //用户名\r\n                    accountName:'',  //密码\r\n                    accountImg:'',\r\n                    statu:1,  //状态\r\n                    delTag:1,\r\n                },\r\n    \r\n                tableData1:[],   //用户表格显示数组\r\n                deleteAllBtnStu1:true, //是否禁用用户的批量删除\r\n                dialogFormVisible1:false,  //是否显示新建用户对话框\r\n                dialogRoleFormVisible1:false,  //是否显示分配角色对话框\r\n                //搜索工具栏对象\r\n                searchForm1:{\r\n                    accountName:''\r\n                },\r\n                //分页相关的参数\r\n                current1:1, //当前页码，默认是显示第一页\r\n                size1:5, //一页显示记录数\r\n                total1:0, //总共的记录数\r\n    \r\n                selection:[],  //存储表格中所有复选框 选中用户对象\r\n\r\n\r\n\r\n                //新建角色的表单对象\r\n             deliveryForm:{\r\n                 daId:0,     //角色id，更新id是有值。保存id===0\r\n                 contactName:'',   //角色名称\r\n                 contactSex:null,\r\n                 accountId:'',\r\n                 accountName:'',\r\n                 contactTel:'',   //角色的编码\r\n                 address:'',  //角色的描述\r\n                 statu:null,    //角色的状态 1正常 0禁用\r\n             },\r\n             //角色对话框表单验证规则\r\n             deliveryRules:{\r\n                contactName:[ { required: true, message: '请输入联系人名称', trigger: 'blur' } ],\r\n                contactTel:[ { required: true, message: '请输入联系人电话', trigger: 'blur' } ],\r\n                address:[ { required: true, message: '请输入联系人地址', trigger: 'blur' } ],\r\n                 statu:[ { required: true, message: '请输入联系人状态', trigger: 'blur' } ],\r\n                 contactSex:[ { required: true, message: '请输入联系人性别', trigger: 'blur' } ],\r\n             },\r\n             tableData:[],  //角色表格的数据\r\n             dialogFormVisible:false, //新建角色对话框是否可见。\r\n             deleteAllBtnStu:true,  //批量删除按钮是否禁用\r\n             //工具栏搜索的表单对象\r\n             searchForm:{\r\n                contactName:'',  //搜索框输入的文本内容 \r\n             },\r\n             //分页相关的参数\r\n             current:1, //当前页码，默认是显示第一页\r\n             size:5, //一页显示记录数\r\n             total:0, //总共的记录数\r\n             \r\n             accountId:'',\r\n             selection:[],  //记录使用表格复选框选中角色数据\r\n             }\r\n         },\r\n         created(){\r\n            this.loadAccountList();\r\n            \r\n         },\r\n         methods:{\r\n            openDrawer(id){\r\n                this.loadComuList(id);\r\n                this.drawer=true\r\n                console.log(id)\r\n                this.accountId=id;\r\n            },\r\n            resetAccountForm(formName){\r\n            this.accountForm={\r\n                    id:'',\r\n                    accountId:'',\r\n                    password:'',   //头像\r\n                    accountSex:'', //用户名\r\n                    accountName:'',  //密码\r\n                    accountImg:'',\r\n                    statu:1,  //状态\r\n                    delTag:1,  \r\n            };\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        resetPassword(accountId,accountName){\r\n            this.$confirm('重置用户【'+accountName+'】的密码，是否继续执行该操作','重置账户密码提示',{\r\n                confirmButtonText:'执行',\r\n                cancelButtonText:'取消',\r\n                type:'warning'\r\n            }).then(()=>{\r\n                //请求服务器端，重置密码\r\n                this.$axios.post('/account/repass/'+accountId).then(response=>{\r\n                    this.$message({\r\n                            showClose: true,\r\n                            message: response.data.resultdata,\r\n                            type: 'success',\r\n                            duration:1000,\r\n                    });\r\n                    this.loadAccountList()\r\n                }).catch(e=>{ console.log(e); })\r\n\r\n            }).catch(()=>{});\r\n        },\r\n        //提交新建用户或 编辑用户的表单\r\n        submitAccountForm(formName){\r\n            this.$refs[formName].validate((valid)=>{\r\n                if(valid){\r\n                    console.log(this.accountForm.accountId)\r\n                    this.$axios.post('/account/'+(this.accountForm.delTag!=1?'update':'save'),this.accountForm).then(response=>{\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: response.data.resultdata,\r\n                            type: 'success',\r\n                            duration:1000,\r\n                        });\r\n                        //添加用户成功，重新加载分页表格数据\r\n                        this.loadAccountList();\r\n                        //重置角色对话框中的表单\r\n                        this.resetAccountForm(formName);\r\n                        this.dialogFormVisible1=false;\r\n                    }).catch(e=>{ console.log(e)});\r\n                }else{\r\n                    return false;\r\n                }\r\n            })\r\n        },\r\n            handleSelection1Change(roleArr){\r\n             this.selection = roleArr\r\n             if(this.selection){\r\n                 //this.selection数组为true，表示选中角色数据行\r\n                 //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\r\n                 //this.selection.length !==0 选中  设置deleteAllBtnStu 设置false不禁用\r\n                 this.deleteAllBtnStu1 = (this.selection.length === 0);\r\n             }\r\n         },\r\n            handleClose(done) {\r\n            this.$confirm('确认关闭？').then(_ => {\r\n                done();\r\n            }).catch(_ => {});\r\n            },\r\n            editAccount(id){\r\n                this.$axios.get('/account/info/'+id).then(response=>{\r\n                let account = response.data.resultdata;\r\n                this.accountForm = account;\r\n                this.dialogFormVisible1=true;\r\n            })\r\n            },\r\n            deleteAccount(id){\r\n                var accountIds =[];  //存储所有要删除的角色id \r\n                console.log(id+111)\r\n                //单个删除 参数id是有值的。而批量删除是从selection数组取删除的角色id\r\n                id?accountIds.push(id):this.selection.forEach( r=>{ accountIds.push(r.accountId) } );\r\n                this.$axios.post('/account/delete',accountIds).then(response=>{\r\n                this.$message({\r\n                    showClose: true,\r\n                    message: response.data.resultdata,\r\n                    type: 'success',\r\n                    duration:1000,\r\n                });\r\n                //删除成功，重新加载角色的分页表格数据\r\n                this.loadAccountList();\r\n                }).catch(e=>{ console.log(e); })\r\n            },\r\n            handleAvatarSuccess(response,file){\r\n            console.log('头像',response.resultdata);\r\n            //上传成功，从回调的response参数中 获得上传图片在OSS服务器上地址。\r\n            //这个response和axios中使用response对象是不一样的。这个response不需要.data。直接返回的就是 result数据。\r\n            this.accountForm.accountImg = response.resultdata\r\n            this.$forceUpdate()  //强制刷新\r\n        },\r\n            handleSize1Change(val){\r\n                console.log(`每页 ${val} 条`);\r\n                this.size1 = val;\r\n                this.loadAccountList(); //一页显示的记录数改变，重新加载分页和表格数据。\r\n            },\r\n            handleCurrent1Change(val){\r\n                console.log(`当前页: ${val}`);\r\n                this.current1 = val;\r\n                this.loadAccountList();  //当前页面改变，重新加载页面的数据。\r\n            },\r\n            //加载 分页用户表格数据\r\n            loadAccountList(){\r\n                this.$axios.get('/account/list',{\r\n                    params:{\r\n                        accountName:this.searchForm1.accountName,  //参数，就是模糊查询条件\r\n                        current:this.current1,\r\n                        size:this.size1,\r\n                    }\r\n                }).then(response=>{\r\n                    this.tableData1 = response.data.resultdata.records  //分页的表格数据\r\n                    this.current1 = response.data.resultdata.current\r\n                    this.size1 = response.data.resultdata.size\r\n                    this.total1 = response.data.resultdata.total\r\n                }).catch(e=>{ console.log(e); });\r\n            },\r\n            //改变表格 复选框的事件方法\r\n\r\n\r\n\r\n\r\n         //参数roleArr 就是复选框选中对应这一行角色对象的数组(可以选多行)。\r\n         handleSelectionChange(roleArr){\r\n             this.selection = roleArr\r\n             if(this.selection){\r\n                 //this.selection数组为true，表示选中角色数据行\r\n                 //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\r\n                 //this.selection.length !==0 选中  设置deleteAllBtnStu 设置false不禁用\r\n                 this.deleteAllBtnStu = (this.selection.length === 0);\r\n             }\r\n         },\r\n \r\n         //点击页面上 页码触发的事件方法，该方法中编写，根据点击的页码加载该页的数据。\r\n         //val 参数就是点击 页码\r\n         handleCurrentChange(val){\r\n             console.log(`当前页: ${val}`);\r\n             this.current = val;\r\n             this.loadComuList(this.accountId);  //当前页面改变，重新加载页面的数据。\r\n         },\r\n \r\n         //选择一页显示记录数触发的事件方法，该方法中编写 重新加载分页和表格数据\r\n         //val就是选择 一页要显示的记录数。\r\n         handleSizeChange(val){\r\n             console.log(`每页 ${val} 条`);\r\n             this.size = val;\r\n             this.loadComuList(this.accountId); //一页显示的记录数改变，重新加载分页和表格数据。\r\n         },\r\n         //加载表格分页数据\r\n         loadComuList(id){\r\n             this.$axios.get('/delivery/list/'+id,{\r\n                 params:{\r\n                    accountId:this.accountForm.accountId,\r\n                     contactName:this.searchForm.contactName,  //参数，就是模糊查询条件\r\n                     current:this.current,\r\n                     size:this.size,\r\n                 }\r\n             }).then(response=>{\r\n                console.log(this.accountId)\r\n                console.log(response.data.resultdata)\r\n                 this.tableData = response.data.resultdata.records  //分页的表格数据\r\n                 this.current = response.data.resultdata.current \r\n                 this.size = response.data.resultdata.size\r\n                 this.total = response.data.resultdata.total\r\n             }).catch(e=>{ console.log(e); });\r\n         },\r\n         }\r\n        }\r\n     </script>\r\n     <style scoped>\r\n         .avatar-uploader .el-upload {\r\n            border: 1px dashed #d9d9d9;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n            position: relative;\r\n            overflow: hidden;\r\n        }\r\n        .avatar-uploader .el-upload:hover {\r\n            border-color: #409EFF;\r\n        }\r\n        .avatar-uploader-icon {\r\n            font-size: 28px;\r\n            color: #8c939d;\r\n            width: 178px;\r\n            height: 178px;\r\n            line-height: 178px;\r\n            text-align: center;\r\n        }\r\n        .avatar {\r\n            width: 178px;\r\n            height: 178px;\r\n            display: block;\r\n            \r\n        }\r\n        .el-table-column{\r\n            text-align: center\r\n        }\r\n     </style>\r\n       "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}