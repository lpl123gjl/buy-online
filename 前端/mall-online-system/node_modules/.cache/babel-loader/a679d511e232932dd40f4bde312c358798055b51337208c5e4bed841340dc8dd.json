{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      //分页相关参数\n      current: 1,\n      //当前页码，默认是 显示第一页\n      size: 5,\n      total: 0,\n      selection: [],\n      //记录使用表格复选框中对应这一行角色数据\n      tableData: [],\n      //商家表格数据\n      deleteAllBtnStu: true,\n      //批量删除的按钮是否禁用\n      //设置新建窗口可视\n      dialogFormVisible: false,\n      categoryForm: {\n        categoryId: 0,\n        categoryName: '',\n        categoryCover: '',\n        statu: 1\n      },\n      categoryRoles: {\n        category: [{\n          required: true,\n          message: '请输入分类姓名',\n          trigger: 'blur'\n        }]\n      },\n      //上传组件请求头信息：\n      headers: {\n        token: JSON.parse(sessionStorage.getItem('TOKEN'))\n      },\n      //根据姓名搜索\n      searchForm: {\n        name: ''\n      }\n    };\n  },\n  components: {},\n  created() {\n    this.loadCategoryList();\n  },\n  methods: {\n    //加载搜索商家的方法\n    loadCategoryList() {\n      this.$axios.get('/category/list', {\n        params: {\n          name: this.searchForm.name,\n          //参数，就是模糊查询条件\n          current: this.current,\n          size: this.size\n        }\n      }).then(response => {\n        this.tableData = response.data.resultdata.records;\n        this.current = response.data.resultdata.current, this.size = response.data.resultdata.size, this.total = response.data.resultdata.total;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    //参数roleArr 就是复选框选中对应这一行角色对象的数组(可以选多行)。\n    handleSelectionChange(roleArr) {\n      this.selection = roleArr;\n      if (this.selection) {\n        //this.selection数组为true，表示选中角色数据行\n        //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\n        //this.selection.length !==0 选中 设置deleteAllBtnStu 设置false不禁用\n        this.deleteAllBtnStu = this.selection.length === 0;\n      }\n    },\n    //编辑商家信息\n    editCategory(categoryId) {\n      this.$axios.get('/category/info/' + categoryId).then(response => {\n        //接受返回\n        this.categoryForm = response.data.resultdata;\n        this.dialogFormVisible = true;\n      }).catch(e => {\n        console.log(e);\n      });\n      this.resetCategoryForm();\n    },\n    //删除商家信息\n    deleteCategory(id) {\n      var categoryIds = [];\n      id ? categoryIds.push(id) : this.selection.forEach(r => {\n        categoryIds.push(c.categoryId);\n      });\n      this.$axios.post('/category/delete', categoryIds).then(response => {\n        this.$message({\n          showClose: true,\n          message: response.data.resultdata,\n          type: 'success',\n          duration: 1000\n        });\n        //删除成功，重新加载角色的分页表格数据\n        this.loadCategoryList();\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    //点击页面改变页码\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.current = val;\n      this.loadCategoryList();\n    },\n    //选择一页显示记录数触发的事件方法\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.size = val;\n      this.loadCategoryList();\n    },\n    //上传用户头像成功后的回调函数\n    handleAvatarSuccess(response, file) {\n      console.log('头像', response.resultdata);\n      //上传成功，从回调的response参数中 获得上传图片在OSS服务器上地址。\n      //这个response和axios中使用response对象是不一样的。这个response不需要.data。直接返回的就是 result数据。\n      this.categoryForm.categoryCover = response.resultdata;\n    },\n    //提交用户数据\n    submitCategoryForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //提交服务器端，保存角色的信息\n          this.$axios.post('/category/' + (this.categoryForm.categoryId != 0 ? 'update' : 'save'), this.categoryForm).then(response => {\n            this.$message({\n              showClose: true,\n              message: response.data.resultdata,\n              type: 'success',\n              duration: 1000\n            });\n            //添加角色成功，重新加载分页表格数据\n            this.loadCategoryList();\n            //重置角色对话框中的表单\n            this.resetCategoryForm(formName);\n            this.dialogFormVisible = false;\n          }).catch(e => {\n            console.log(e);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //重置新建商家对话框\n    resetCategoryForm(formName) {\n      this.categoryForm = {\n        categoryId: 0,\n        categoryName: '',\n        categoryCover: '',\n        statu: 1\n      };\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","current","size","total","selection","tableData","deleteAllBtnStu","dialogFormVisible","categoryForm","categoryId","categoryName","categoryCover","statu","categoryRoles","category","required","message","trigger","headers","token","JSON","parse","sessionStorage","getItem","searchForm","name","components","created","loadCategoryList","methods","$axios","get","params","then","response","resultdata","records","catch","e","console","log","handleSelectionChange","roleArr","length","editCategory","resetCategoryForm","deleteCategory","id","categoryIds","push","forEach","r","c","post","$message","showClose","type","duration","handleCurrentChange","val","handleSizeChange","handleAvatarSuccess","file","submitCategoryForm","formName","$refs","validate","valid","resetFields"],"sources":["src/views/app/Category.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--类别管理  -->\r\n    <el-form ref=\"searchForm\" :model=\"searchForm\" :inline=\"true\">\r\n      <el-form-item>\r\n        <el-input placeholder=\"请输入要搜索的分类名称\" v-model=\"searchForm.name\" clearable />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button @click=\"loadCategoryList()\">搜索</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogFormVisible=true\">新建</el-button>\r\n        <el-popconfirm title=\"确认要删除这些分类吗\" @confirm=\"deleteCategory()\">\r\n          <el-button type=\"danger\" slot=\"reference\" :disabled=\"deleteAllBtnStu\">批量删除</el-button>\r\n        </el-popconfirm>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--类别表格-->\r\n    <el-table :data=\"tableData\" border style=\"width:100%; margin-bottom:20px;\" :cell-style=\"{padding:'4px'}\"\r\n      @selection-change=\"handleSelectionChange\" stripe>\r\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n      <el-table-column label=\"头像\" width=\"60\">\r\n        <template slot-scope=\"scope\">\r\n          <el-avatar :src=\"scope.row.categoryCover\"></el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"categoryName\" label=\"分类名称\" width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"statu\" label=\"分类状态\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag type=\"success\" v-if=\"scope.row.statu === 1\" size=\"mini\">正常</el-tag>\r\n          <el-tag type=\"danger\" v-if=\"scope.row.statu === 0\" size=\"mini\">禁用</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button @click=\"editCategory(scope.row.categoryId)\" type=\"text\" size=\"small\">编辑</el-button>\r\n                    <el-divider direction=\"vertical\" />\r\n                    <el-popconfirm title=\"确定要删除角色数据吗？\" @confirm=\"deleteCategory(scope.row.categoryId)\">\r\n                        <el-button slot=\"reference\" type=\"text\" size=\"small\">删除</el-button>\r\n                    </el-popconfirm>\r\n                </template>\r\n            </el-table-column>\r\n    </el-table>\r\n\r\n    <!--分页组件-->\r\n    <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"current\"\r\n      :page-sizes=\"[5,10,15,20]\" :page-size=\"size\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n    </el-pagination>\r\n\r\n    <!--新建分类对话框-->\r\n    <el-dialog title=\"新建分类\" :visible.sync=\"dialogFormVisible\" width=\"550px\">\r\n      <el-form :model=\"categoryForm\" ref=\"categoryForm\" label-width=\"150px\" :rules=\"categoryRoles\">\r\n        <el-upload class=\"avatar-uploader\" action=\"/sys/api/upload\" :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\" :headers=\"headers\">\r\n          <img v-if=\"categoryForm.categoryCover\" :src=\"categoryForm.categoryCover\" class=\"avatar\">\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n        <el-form-item label=\"分类名称\" label-width=\"150px\" prop=\"categoryName\">\r\n          <el-input v-model=\"categoryForm.categoryName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类状态\" label-width=\"100px\">\r\n                    <el-radio-group v-model=\"categoryForm.statu\">\r\n                        <el-radio :label=\"0\">禁用</el-radio>\r\n                        <el-radio :label=\"1\">正常</el-radio>\r\n                    </el-radio-group>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitCategoryForm('categoryForm')\">保存商家</el-button>\r\n                    <el-button @click=\"resetCategoryForm('categoryForm')\">重置</el-button>\r\n                </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n       //分页相关参数\r\n       current: 1,//当前页码，默认是 显示第一页\r\n             size: 5,\r\n             total: 0,\r\n      selection:[],//记录使用表格复选框中对应这一行角色数据\r\n            tableData:[],//商家表格数据\r\n            deleteAllBtnStu:true,//批量删除的按钮是否禁用\r\n            //设置新建窗口可视\r\n            dialogFormVisible:false,\r\n      categoryForm:{\r\n        categoryId:0,\r\n        categoryName:'',\r\n        categoryCover:'',\r\n        statu:1,\r\n      },\r\n      categoryRoles:{\r\n        category:[ { required: true, message: '请输入分类姓名', trigger: 'blur' }],\r\n      },\r\n      //上传组件请求头信息：\r\n      headers: {\r\n                 token: JSON.parse(sessionStorage.getItem('TOKEN'))\r\n             },\r\n       //根据姓名搜索\r\n       searchForm:{\r\n                name:'',\r\n            },\r\n\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n  created(){\r\n        this.loadCategoryList();\r\n        \r\n     },\r\n  methods: {\r\n    //加载搜索商家的方法\r\n    loadCategoryList(){\r\n            this.$axios.get('/category/list',{\r\n                params:{\r\n                    name:this.searchForm.name,//参数，就是模糊查询条件\r\n                    current:this.current,\r\n                    size:this.size\r\n                }\r\n            }).then(response=>{\r\n                this.tableData=response.data.resultdata.records\r\n                this.current=response.data.resultdata.current,\r\n                this.size=response.data.resultdata.size,\r\n                this.total=response.data.resultdata.total\r\n            }).catch(e=>{console.log(e);})\r\n        },\r\n    //参数roleArr 就是复选框选中对应这一行角色对象的数组(可以选多行)。\r\n    handleSelectionChange(roleArr) {\r\n             this.selection = roleArr\r\n             if (this.selection) {\r\n                 //this.selection数组为true，表示选中角色数据行\r\n                 //this.selection.length === 0 没有选中，设置deleteAllBtnStu 设置true禁用\r\n                 //this.selection.length !==0 选中 设置deleteAllBtnStu 设置false不禁用\r\n                 this.deleteAllBtnStu = (this.selection.length === 0);\r\n             }\r\n        },\r\n     //编辑商家信息\r\n     editCategory(categoryId){\r\n            this.$axios.get('/category/info/' + categoryId).then(response => {\r\n                 //接受返回\r\n                 this.categoryForm = response.data.resultdata;\r\n                 this.dialogFormVisible = true;\r\n             }).catch(e => { console.log(e); })\r\n             this.resetCategoryForm();\r\n            \r\n        },\r\n     //删除商家信息\r\n     deleteCategory(id){\r\n            var categoryIds = [];\r\n            id ? categoryIds.push(id) : this.selection.forEach(r=>{categoryIds.push(c.categoryId)});\r\n            this.$axios.post('/category/delete', categoryIds).then(response => {\r\n                 this.$message({\r\n                     showClose: true,\r\n                     message: response.data.resultdata,\r\n                     type: 'success',\r\n                     duration: 1000,\r\n                 });\r\n                 //删除成功，重新加载角色的分页表格数据\r\n                 this.loadCategoryList();\r\n             }).catch(e => { console.log(e); })\r\n        },\r\n     //点击页面改变页码\r\n     handleCurrentChange(val) {\r\n             console.log(`当前页: ${val}`);\r\n             this.current = val;\r\n             this.loadCategoryList();\r\n         },\r\n    //选择一页显示记录数触发的事件方法\r\n    handleSizeChange(val) {\r\n             console.log(`每页 ${val} 条`);\r\n             this.size = val;\r\n             this.loadCategoryList();\r\n         },\r\n      //上传用户头像成功后的回调函数\r\n      handleAvatarSuccess(response, file) {\r\n             console.log('头像', response.resultdata);\r\n             //上传成功，从回调的response参数中 获得上传图片在OSS服务器上地址。\r\n             //这个response和axios中使用response对象是不一样的。这个response不需要.data。直接返回的就是 result数据。\r\n             this.categoryForm.categoryCover = response.resultdata\r\n         },\r\n    //提交用户数据\r\n    submitCategoryForm(formName){\r\n            this.$refs[formName].validate((valid) => {\r\n                 if (valid) {\r\n                     //提交服务器端，保存角色的信息\r\n                     this.$axios.post('/category/'+(this.categoryForm.categoryId!=0?'update':'save'), this.categoryForm).then(response => {\r\n                         this.$message({\r\n                             showClose: true,\r\n                             message: response.data.resultdata,\r\n                             type: 'success',\r\n                             duration: 1000,\r\n                         });\r\n                         //添加角色成功，重新加载分页表格数据\r\n                         this.loadCategoryList();\r\n                         //重置角色对话框中的表单\r\n                         this.resetCategoryForm(formName);\r\n                         this.dialogFormVisible = false;\r\n                     }).catch(e => { console.log(e) });\r\n                 } else {\r\n                     return false;\r\n                 }\r\n             })\r\n        },\r\n    //重置新建商家对话框\r\n    resetCategoryForm(formName){\r\n      this.categoryForm={\r\n        categoryId:0,\r\n        categoryName:'',\r\n        categoryCover:'',\r\n        statu:1,\r\n      };\r\n        this.$refs[formName].resetFields();\r\n        },\r\n  },\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n /* <!--上传图片的样式--> */\r\n .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}