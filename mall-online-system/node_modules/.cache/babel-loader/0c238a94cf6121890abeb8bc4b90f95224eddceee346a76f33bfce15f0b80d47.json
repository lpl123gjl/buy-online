{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      captchaImg: '',\n      loginObject: {\n        username: '',\n        password: '',\n        code: '',\n        key: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {},\n  created() {\n    this.loadCaptcha();\n  },\n  methods: {\n    loadCaptcha() {\n      let url = '/api/captcha';\n      this.$axios.get(url).then(response => {\n        this.captchaImg = response.data.resultdata.captcha;\n        this.loginObject.key = response.data.resultdata.key;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    submitLoginForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let url = '/login';\n          this.$axios.post(url, this.$qs.stringify(this.loginObject)).then(response => {\n            const jwt = response.headers['token'];\n            this.$store.commit('SET_TOKEN', jwt);\n            this.$router.push(\"/index\");\n          }).catch(error => {\n            console.log(error);\n            this.loadCaptcha();\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","captchaImg","loginObject","username","password","code","key","rules","required","message","trigger","components","created","loadCaptcha","methods","url","$axios","get","then","response","resultdata","captcha","catch","error","console","log","submitLoginForm","formName","$refs","validate","valid","post","$qs","stringify","jwt","headers","$store","commit","$router","push"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"7\">\r\n    <h2>智慧社区后台管理系统</h2>\r\n    <el-image style=\"width: 180px; height: 180px;\" :src=\"require('@/assets/logo.png')\"></el-image>\r\n    <p>万里学院大数据与软件工程学院提供技术支持</p>\r\n    <p>基于Vue+SpringBoot技术实现</p>\r\n  </el-col>\r\n\r\n  <el-col :span=\"1\">\r\n    <el-divider direction=\"vertical\"></el-divider>\r\n  </el-col>\r\n  <el-col :span=8>\r\n    <el-form ref=\"loginForm\" :model=\"loginObject\" label-width=\"80px\" label-position=\"right\" :rules=\"rules\">\r\n      <el-form-item label=\"用户名\" style=\"width: 360px;\" prop=\"username\">\r\n        <el-input v-model=\"loginObject.username\" clearable/>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" style=\"width: 360px;\" prop=\"password\">\r\n        <el-input v-model=\"loginObject.password\" show-password />\r\n      </el-form-item>\r\n      <el-form-item label=\"验证码\" style=\"width: 360px;\" prop=\"code\">\r\n        <el-input v-model=\"loginObject.code\" style=\"width: 140px; float: left;\" maxlength=\"5\" />\r\n        <el-image :src=\"captchaImg\" class=\"captchaImg\" @click=\"loadCaptcha\"/>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitLoginForm('loginForm')\">登录</el-button>\r\n        <el-button >忘记密码</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-col>\r\n    \r\n\r\n  </el-row>\r\n \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      captchaImg:'',\r\n      loginObject: {\r\n        username: '',\r\n        password: '',\r\n        code:'',\r\n        key:'',\r\n      },\r\n      rules:{\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        ],\r\n        password:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        code:[\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n  created(){\r\n    this.loadCaptcha();\r\n  },\r\n  methods: {\r\n    loadCaptcha(){\r\n      let url = '/api/captcha';\r\n      this.$axios.get(url).then((response)=>{\r\n        this.captchaImg = response.data.resultdata.captcha;\r\n        this.loginObject.key = response.data.resultdata.key;\r\n      }).catch((error)=>{\r\n        console.log(error);\r\n      });\r\n    },\r\n    submitLoginForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          let url = '/login'\r\n          this.$axios.post(url,this.$qs.stringify(this.loginObject)).then((response)=>{\r\n            const jwt = response.headers['token'];\r\n            this.$store.commit('SET_TOKEN',jwt);\r\n            this.$router.push(\"/index\");\r\n          }).catch((error)=>{\r\n            console.log(error)\r\n            this.loadCaptcha();\r\n          })\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    \r\n  },\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n  .el-row {\r\n    background-color: #fafafa;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  h2 {\r\n    font-size: 25px;\r\n    color: #409EFF;\r\n  }\r\n  p {\r\n    font-size: 16px;\r\n    color: #606266;\r\n  }\r\n  .el-divider {\r\n    height: 200px;\r\n  }\r\n  .captchaImg{\r\n    float:left;\r\n    margin-left: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n  }\r\n</style>"],"mappings":";AAqCA;EACAA,KAAA;IACA;MACAC,UAAA;MACAC,WAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;QACAC,GAAA;MACA;MACAC,KAAA;QACAJ,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,UAAA,GAEA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACA,IAAAE,GAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,CAAAF,GAAA,EAAAG,IAAA,CAAAC,QAAA;QACA,KAAAlB,UAAA,GAAAkB,QAAA,CAAAnB,IAAA,CAAAoB,UAAA,CAAAC,OAAA;QACA,KAAAnB,WAAA,CAAAI,GAAA,GAAAa,QAAA,CAAAnB,IAAA,CAAAoB,UAAA,CAAAd,GAAA;MACA,GAAAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,gBAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAAf,GAAA;UACA,KAAAC,MAAA,CAAAe,IAAA,CAAAhB,GAAA,OAAAiB,GAAA,CAAAC,SAAA,MAAA/B,WAAA,GAAAgB,IAAA,CAAAC,QAAA;YACA,MAAAe,GAAA,GAAAf,QAAA,CAAAgB,OAAA;YACA,KAAAC,MAAA,CAAAC,MAAA,cAAAH,GAAA;YACA,KAAAI,OAAA,CAAAC,IAAA;UACA,GAAAjB,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;YACA,KAAAV,WAAA;UACA;QACA;UACA;QACA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}