{"ast":null,"code":"export default {\n  data() {\n    var validatePwd = (rule, value, callback) => {\n      if (value == '') {\n        callback(new Error('请再次输入新密码'));\n      } else if (value !== this.pwdForm.newPassword) {\n        callback(new Error('两次输入新密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      userInfo: {},\n      pwdForm: {\n        password: '',\n        newPassword: '',\n        checkPassword: ''\n      },\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入旧密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '新密码长度应为6-12个字符',\n          trigger: 'blur'\n        }],\n        checkPassword: [{\n          required: true,\n          validator: validatePwd,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {},\n  created() {\n    this.loadUserInfo();\n  },\n  methods: {\n    loadUserInfo() {\n      this.$axios.get('/user/info').then(response => {\n        this.userInfo = response.data.resultdata;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    submit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let url = '/api/updatePass';\n          this.$axios.post(url, this.$qs.stringify(this.pwdForm)).then(response => {\n            this.$message({\n              message: '修改成功',\n              type: 'success'\n            });\n            this.pwdForm.password = '';\n            this.pwdForm.newPassword = '';\n            this.pwdForm.checkPassword = '';\n          }).catch(error => {\n            console.log(error);\n            this.pwdForm.password = '';\n            this.pwdForm.newPassword = '';\n            this.pwdForm.checkPassword = '';\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","validatePwd","rule","value","callback","Error","pwdForm","newPassword","userInfo","password","checkPassword","rules","required","message","trigger","min","max","validator","components","created","loadUserInfo","methods","$axios","get","then","response","resultdata","catch","error","console","log","submit","formName","$refs","validate","valid","url","post","$qs","stringify","$message","type"],"sources":["src/views/SetPwd.vue"],"sourcesContent":["<template>\r\n  <div style=\"text-align: center;\">\r\n  <h2>您好，{{ userInfo.username }} 请您重新设置登录密码</h2>\r\n  <el-form ref=\"pwdForm\" :model=\"pwdForm\" label-width=\"100pw\" :rules=\"rules\">\r\n    <el-form-item label=\"旧密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"pwdForm.password\"/>\r\n    </el-form-item>    \r\n    <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n        <el-input type=\"password\" v-model=\"pwdForm.newPassword\"/>\r\n    </el-form-item>  \r\n    <el-form-item label=\"确认密码\" prop=\"checkPassword\">\r\n        <el-input type=\"password\" v-model=\"pwdForm.checkPassword\"/>\r\n    </el-form-item>  \r\n    <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submit('pwdForm')\">提交</el-button>\r\n    </el-form-item>\r\n</el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    var validatePwd = (rule,value,callback) =>{\r\n        if(value == ''){\r\n            callback(new Error('请再次输入新密码'));\r\n        }else if(value !== this.pwdForm.newPassword){\r\n            callback(new Error('两次输入新密码不一致'));\r\n        }else{\r\n            callback();\r\n        }\r\n    }\r\n    return {\r\n        userInfo:{},\r\n        pwdForm:{\r\n            password:'',\r\n            newPassword:'',\r\n            checkPassword:''\r\n        },\r\n        rules:{\r\n            password:[\r\n                {required:true,message:'请输入旧密码',trigger:'blur'},\r\n            ],\r\n            newPassword:[\r\n                {required:true,message:'请输入新密码',trigger:'blur'},\r\n                {min:6,max:12,message:'新密码长度应为6-12个字符',trigger:'blur'}\r\n            ],\r\n            checkPassword:[\r\n                {required:true,validator:validatePwd,trigger:'blur'}\r\n            ]\r\n        }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n  created(){\r\n    this.loadUserInfo();\r\n  },\r\n  methods: {\r\n    loadUserInfo(){\r\n      this.$axios.get('/user/info').then((response)=>{\r\n        this.userInfo = response.data.resultdata;\r\n      }).catch((error)=>{\r\n        console.log(error)\r\n      })\r\n    },\r\n    submit(formName){\r\n        this.$refs[formName].validate((valid)=>{\r\n            if(valid){\r\n                let url = '/api/updatePass'\r\n                this.$axios.post(url,this.$qs.stringify(this.pwdForm)).then((response)=>{\r\n                    this.$message({\r\n                    message: '修改成功',\r\n                    type: 'success'\r\n                    });\r\n                    this.pwdForm.password='';\r\n                    this.pwdForm.newPassword='';\r\n                    this.pwdForm.checkPassword=''\r\n                }).catch((error)=>{\r\n                    console.log(error)\r\n                    this.pwdForm.password='';\r\n                    this.pwdForm.newPassword='';\r\n                    this.pwdForm.checkPassword=''\r\n                })\r\n            }else{\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n  },\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n.el-form{\r\n    width: 430px;\r\n    margin: 50px auto;\r\n}\r\n\r\n</style>"],"mappings":"AAqBA;EACAA,KAAA;IACA,IAAAC,WAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,OAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,QAAA;MACAF,OAAA;QACAG,QAAA;QACAF,WAAA;QACAG,aAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,WAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,aAAA,GACA;UAAAE,QAAA;UAAAK,SAAA,EAAAhB,WAAA;UAAAa,OAAA;QAAA;MAEA;IACA;EACA;EACAI,UAAA,GAEA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAD,aAAA;MACA,KAAAE,MAAA,CAAAC,GAAA,eAAAC,IAAA,CAAAC,QAAA;QACA,KAAAjB,QAAA,GAAAiB,QAAA,CAAAzB,IAAA,CAAA0B,UAAA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAAC,GAAA;UACA,KAAAd,MAAA,CAAAe,IAAA,CAAAD,GAAA,OAAAE,GAAA,CAAAC,SAAA,MAAAjC,OAAA,GAAAkB,IAAA,CAAAC,QAAA;YACA,KAAAe,QAAA;cACA3B,OAAA;cACA4B,IAAA;YACA;YACA,KAAAnC,OAAA,CAAAG,QAAA;YACA,KAAAH,OAAA,CAAAC,WAAA;YACA,KAAAD,OAAA,CAAAI,aAAA;UACA,GAAAiB,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;YACA,KAAAtB,OAAA,CAAAG,QAAA;YACA,KAAAH,OAAA,CAAAC,WAAA;YACA,KAAAD,OAAA,CAAAI,aAAA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}